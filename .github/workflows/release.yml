name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  id-token: write

env:
  NODE_VERSION: "20.18.1"
  PNPM_VERSION: "9.15.4"
  NPM_CONFIG_PROVENANCE: true
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_REMOTE_CACHE_SIGNATURE_KEY: ${{ secrets.TURBO_REMOTE_CACHE_SIGNATURE_KEY }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      published: ${{ steps.changesets.outputs.published }}
      publishedPackages: ${{ steps.changesets.outputs.publishedPackages }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Using GITHUB_TOKEN - version PRs won't trigger CI
          # This is fine - they only change package.json and CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup PNPM
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ env.NODE_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}

      # Build quality-check package (required by pre-commit hook during changeset version)
      - name: Build quality-check package
        run: pnpm --filter @orchestr8/quality-check build

      - name: Create Release PR or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm changeset version
          publish: pnpm changeset publish
          commit: "chore: version packages"
          title: "chore: version packages"
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish summary
        if: steps.changesets.outputs.published == 'true'
        run: |
          echo "## ðŸš€ Published Packages" >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.changesets.outputs.publishedPackages }}' | jq -r '.[] | "- \(.name)@\(.version)"' >> $GITHUB_STEP_SUMMARY
