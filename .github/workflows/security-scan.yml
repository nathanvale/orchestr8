name: Security Scan

on:
  pull_request:
  push:
    branches: [main, develop]
  schedule:
    # Weekly security scans on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

concurrency:
  group: security-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: "20.18.1"
  PNPM_VERSION: "9.15.4"

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  # Check for vulnerable dependencies
  audit:
    name: Dependency Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ env.NODE_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}

      - name: Run audit
        run: |
          echo "## 🔒 Security Audit" >> $GITHUB_STEP_SUMMARY
          if pnpm audit --audit-level moderate; then
            echo "✅ No vulnerabilities found" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Vulnerabilities detected" >> $GITHUB_STEP_SUMMARY
            echo "Run \`pnpm audit fix\` to fix automatically" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

  # Static Application Security Testing
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      security-events: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ env.NODE_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}

      - name: Build for analysis
        run: pnpm build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript"

  # Detect hardcoded secrets
  secrets:
    name: Secret Detection
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Scan for secrets
        run: |
          echo "## 🔐 Secret Scan" >> $GITHUB_STEP_SUMMARY

          # Common secret patterns (excluding test files)
          FOUND=0
          if git grep -iE "(password|api[_-]?key|secret|token)\s*[=:]\s*['\"][^'\"]{8,}" -- \
            "*.js" "*.ts" "*.json" "*.env*" \
            ":!**/__tests__/**" \
            ":!**/*.test.*" \
            ":!**/fixtures/**" \
            2>/dev/null | grep -v -E "(mock|test|example|dummy|localhost)" 2>/dev/null; then
            FOUND=1
          fi

          if [ $FOUND -eq 0 ]; then
            echo "✅ No hardcoded secrets detected" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Potential secrets found" >> $GITHUB_STEP_SUMMARY
            echo "Use environment variables or secret management" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
