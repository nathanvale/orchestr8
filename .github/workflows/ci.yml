name: CI

on:
  pull_request:
  push:
    branches: [main, develop]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: "20.18.1"
  PNPM_VERSION: "9.15.4"
  NODE_OPTIONS: "--max-old-space-size=4096"
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_REMOTE_CACHE_SIGNATURE_KEY: ${{ secrets.TURBO_REMOTE_CACHE_SIGNATURE_KEY }}

permissions:
  contents: read
  checks: write

jobs:
  # Single job - Turborepo orchestrates everything
  validate:
    name: Validate
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Full history for turbo --filter

      - name: Setup PNPM
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ env.NODE_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}

      # PR: Only validate affected packages
      - name: Validate affected packages (PR)
        if: github.event_name == 'pull_request'
        run: |
          turbo run build lint typecheck test \
            --filter="...[origin/${{ github.event.pull_request.base.ref }}]" \
            --output-logs=errors-only

      # Push to main/develop: Validate everything
      - name: Validate all packages (Push)
        if: github.event_name == 'push'
        run: |
          turbo run build lint typecheck test \
            --output-logs=errors-only

      # Manual trigger: Validate everything
      - name: Validate all packages (Manual)
        if: github.event_name == 'workflow_dispatch'
        run: |
          turbo run build lint typecheck test \
            --output-logs=errors-only

  # Only run on push to main - informational only
  coverage:
    name: Coverage Report
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.event_name == 'push' && github.ref_name == 'main'
    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ env.NODE_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}

      - name: Run tests with coverage
        run: pnpm test:coverage

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.sha }}
          path: coverage
          retention-days: 30

      - name: Coverage summary
        run: |
          echo "## ðŸ“Š Coverage Report" >> $GITHUB_STEP_SUMMARY
          if [ -f coverage/coverage-summary.json ]; then
            node -e "
              const c = require('./coverage/coverage-summary.json').total;
              console.log('Lines: ' + c.lines.pct + '%');
              console.log('Statements: ' + c.statements.pct + '%');
              console.log('Functions: ' + c.functions.pct + '%');
              console.log('Branches: ' + c.branches.pct + '%');
            " | tee -a $GITHUB_STEP_SUMMARY
          fi
